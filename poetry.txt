✅ Poetry Installation & Project Setup Summary

1. Install Poetry
$	curl -sSL https://install.python-poetry.org | python3 -

2. Add Poetry to PATH (for Zsh)
$	echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.zshrc
$	source ~/.zshrc


3.  Verify it's installed
$	which poetry
#	should return : /home/mzhivoto/.local/bin/poetry

4. Initialize project with dependencies

poetry init --name airguardian \
  --dependency fastapi=^0.110.0 \
  --dependency uvicorn=^0.29.0 \
  --dependency httpx=^0.27.0 \
  --dependency sqlalchemy=^2.0 \
  --dependency asyncpg=^0.29.0 \
  --dependency python-dotenv=^1.0.1 \
  --python "^3.10"


5. Install dependencies
$	poetry install

6. (If not creating a package)
	Add this to pyproject.toml before [project] to disable package mode:

	# in toml file
	[tool.poetry]
	ackage-mode = false

✅ What is Poetry?
Poetry is a modern Python tool that handles:

📦 Dependency management
→ Easily add, remove, and lock package versions.

🧪 Virtual environments
→ Automatically creates and uses isolated Python environments.

🚀 Project management
→ Initializes and configures your Python projects with a single file: pyproject.toml.

📤 Packaging & publishing (optional)
→ Helps you build and publish libraries to PyPI.

🔥 Why use Poetry?
No need for requirements.txt, venv, or setup.py — just pyproject.toml.

Cleaner, more predictable environments.

Better version control with poetry.lock.

⚙️ Typical workflow
bash
poetry new myproject      # Create a new project
poetry add fastapi        # Add a dependency
poetry install            # Install all deps
poetry run python         # Run code in the venv
poetry build              # (Optional) Build a package